version: 2.1

orbs:
  python: circleci/python@1.5.0
  docker: circleci/docker@2.0.1

jobs:
  lint:
    executor: python/default
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: "Run pylint"
          command: |
            . venv/bin/activate
            pylint app.py
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
  test:
    executor: python/default
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: "Run tests"
          command: |
            pip install -r requirements.txt
            python3 test.py
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
  deploy:
      machine: true
      steps:
        - checkout
        - run:
            name: Build and push Docker image to Dockerhub
            command: |
              echo $DH_PSW | docker login --username $DH_USER --password-stdin
              docker tag borislavv/test borislavv/test:latest
              docker push borislavv/test:latest
workflows:
  lint-test-build-deploy:
    jobs: 
      - lint
      - test
      - docker/publish:
          deploy: false
          image: borislavv/test
      - deploy:
          requires:
            - lint
            - test
            - docker/publish
          filters:
            branches:
              only: master
